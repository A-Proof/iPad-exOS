{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "yellow",
    "glyph" : "magic"
  },
  "name" : "Terminal",
  "script" : "async function main() {\n  const apps = {\n    safari: \"https:\/\/www.google.com\/?client=safari\",\n    mail: \"mailto:\",\n    files: \"shareddocuments:\/\/\",\n    roblox: \"roblox:\/\/\",\n    pages: \"pages:\/\/\",\n    calendar: \"calshow:\/\/\",\n    reminders: \"x-apple-reminder:\/\/\"\n  };\n\n  const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" \/>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" \/>\n<title>Ultimate Launcher Terminal<\/title>\n<style>\n  body {\n    margin: 0; padding: 0;\n    height: 100vh;\n    background: #0c0c0c;\n    font-family: monospace, monospace;\n    display: flex;\n    color: #00ff00;\n  }\n  #container {\n    display: flex;\n    width: 100%;\n    height: 100%;\n  }\n  #terminal {\n    flex: 1.2;\n    display: flex;\n    flex-direction: column;\n    border-right: 2px solid #004400;\n    background: #080808;\n  }\n  #output {\n    flex-grow: 1;\n    overflow-y: auto;\n    padding: 12px;\n    white-space: pre-wrap;\n  }\n  #inputBar {\n    display: flex;\n    border-top: 1px solid #008800;\n  }\n  #prompt {\n    background: #003300;\n    padding: 10px;\n    user-select: none;\n    flex-shrink: 0;\n  }\n  #cmdInput {\n    flex-grow: 1;\n    border: none;\n    background: #001100;\n    color: #00ff00;\n    font-family: monospace;\n    font-size: 16px;\n    padding: 10px;\n    outline: none;\n  }\n  #cmdInput::placeholder {\n    color: #004400;\n  }\n  .output-line {\n    margin-bottom: 6px;\n  }\n  .error {\n    color: #ff4444;\n  }\n  .success {\n    color: #44ff44;\n  }\n\n  \/* Right side tabs *\/\n  #rightPanel {\n    flex: 1;\n    background: #101010;\n    display: flex;\n    flex-direction: column;\n  }\n  #tabs {\n    display: flex;\n    border-bottom: 1px solid #004400;\n  }\n  .tab {\n    padding: 10px 20px;\n    cursor: pointer;\n    user-select: none;\n    color: #00ff00;\n    border-bottom: 2px solid transparent;\n  }\n  .tab.active {\n    border-bottom: 2px solid #00ff00;\n    font-weight: bold;\n  }\n  #tabContent {\n    flex-grow: 1;\n    overflow-y: auto;\n    padding: 15px;\n    color: white;\n  }\n\n  \/* App launcher *\/\n  #appLauncher {\n    display: grid;\n    grid-template-columns: repeat(auto-fill,minmax(70px,1fr));\n    gap: 15px;\n  }\n  .appIcon {\n    background: #003300;\n    border-radius: 10px;\n    text-align: center;\n    padding: 10px 5px;\n    cursor: pointer;\n    user-select: none;\n    transition: background 0.3s;\n  }\n  .appIcon:hover {\n    background: #006600;\n  }\n  .appEmoji {\n    font-size: 36px;\n  }\n  .appName {\n    font-size: 14px;\n    margin-top: 6px;\n    color: #00ff00;\n  }\n\n  \/* Notes UI *\/\n  #notesArea {\n    width: 100%;\n    height: 100%;\n    background: #020202;\n    color: #00ff00;\n    font-family: monospace, monospace;\n    font-size: 16px;\n    padding: 10px;\n    border: none;\n    resize: none;\n    outline: none;\n  }\n  #notesControls {\n    margin-bottom: 10px;\n  }\n  #notesSaveBtn {\n    background: #006600;\n    color: #00ff00;\n    border: none;\n    padding: 6px 12px;\n    border-radius: 6px;\n    cursor: pointer;\n    user-select: none;\n  }\n  #notesSaveBtn:hover {\n    background: #009900;\n  }\n\n  \/* Web launcher *\/\n  #webLauncher {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n  #urlInput {\n    font-family: monospace, monospace;\n    font-size: 16px;\n    padding: 10px;\n    border: none;\n    border-radius: 6px;\n    margin-bottom: 12px;\n    outline: none;\n  }\n  #goBtn {\n    background: #006600;\n    color: #00ff00;\n    border: none;\n    padding: 10px;\n    border-radius: 6px;\n    cursor: pointer;\n    user-select: none;\n    width: 100px;\n  }\n  #goBtn:hover {\n    background: #009900;\n  }\n<\/style>\n<\/head>\n<body>\n  <div id=\"container\">\n\n    <div id=\"terminal\">\n      <div id=\"output\"><\/div>\n      <div id=\"inputBar\">\n        <div id=\"prompt\">‚ûú<\/div>\n        <input id=\"cmdInput\" type=\"text\" placeholder=\"Type a command and press Enter...\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" \/>\n      <\/div>\n    <\/div>\n\n    <div id=\"rightPanel\">\n      <div id=\"tabs\">\n        <div class=\"tab active\" data-tab=\"apps\">Apps<\/div>\n        <div class=\"tab\" data-tab=\"notes\">Notes<\/div>\n        <div class=\"tab\" data-tab=\"web\">Web<\/div>\n      <\/div>\n      <div id=\"tabContent\">\n        <div id=\"appLauncher\" class=\"tabContent active\"><\/div>\n        <div id=\"notesUI\" class=\"tabContent\" style=\"display:none;\">\n          <div id=\"notesControls\">\n            <button id=\"notesSaveBtn\">Save Notes<\/button>\n          <\/div>\n          <textarea id=\"notesArea\" placeholder=\"Type your notes here...\"><\/textarea>\n        <\/div>\n        <div id=\"webLauncher\" class=\"tabContent\" style=\"display:none;\">\n          <input id=\"urlInput\" type=\"text\" placeholder=\"Enter URL (e.g. https:\/\/www.google.com)\" \/>\n          <button id=\"goBtn\">Go<\/button>\n        <\/div>\n      <\/div>\n    <\/div>\n\n  <\/div>\n\n<script>\n  const apps = JSON.parse(decodeURIComponent(\"__APPS_JSON__\"));\n  \n  function playSound(freq = 440, duration = 100) {\n    try {\n      const ctx = new (window.AudioContext || window.webkitAudioContext)();\n      const oscillator = ctx.createOscillator();\n      oscillator.type = 'square';\n      oscillator.frequency.value = freq;\n      oscillator.connect(ctx.destination);\n      oscillator.start();\n      setTimeout(() => oscillator.stop(), duration);\n      setTimeout(() => ctx.close(), duration + 10);\n    } catch(e) {\n      console.log('Sound error', e);\n    }\n  }\n\n  const output = document.getElementById(\"output\");\n  const input = document.getElementById(\"cmdInput\");\n  const notesArea = document.getElementById(\"notesArea\");\n  const notesSaveBtn = document.getElementById(\"notesSaveBtn\");\n  const urlInput = document.getElementById(\"urlInput\");\n  const goBtn = document.getElementById(\"goBtn\");\n  const tabs = document.querySelectorAll(\".tab\");\n  const tabContents = document.querySelectorAll(\".tabContent\");\n\n  function appendLine(text, className=\"\") {\n    const div = document.createElement(\"div\");\n    div.textContent = text;\n    div.className = \"output-line \" + className;\n    output.appendChild(div);\n    output.scrollTop = output.scrollHeight;\n  }\n\n  function showHelp() {\n    appendLine(\"Commands:\");\n    appendLine(\" - open [app]  : Open an app\");\n    appendLine(\" - list apps   : List all apps\");\n    appendLine(\" - time        : Show current time\");\n    appendLine(\" - date        : Show current date\");\n    appendLine(\" - clear       : Clear terminal\");\n    appendLine(\" - notes       : Switch to Notes tab\");\n    appendLine(\" - web         : Switch to Web Launcher tab\");\n    appendLine(\" - help        : Show this help\");\n    appendLine(\" - exit        : Close launcher\");\n  }\n\n  function listApps() {\n    appendLine(\"Available apps:\");\n    Object.keys(apps).forEach(app => appendLine(\" - \" + app));\n  }\n\n  function openApp(appName) {\n    const url = apps[appName];\n    if (url) {\n      window.webkit.messageHandlers.openApp.postMessage(url);\n      appendLine(\\`Opening \"\\${appName}\"...\\`, \"success\");\n      playSound(600, 100);\n    } else {\n      appendLine(\\`App \"\\${appName}\" not found.\\`, \"error\");\n      playSound(200, 200);\n    }\n  }\n\n  function processCommand(cmd) {\n    if (!cmd.trim()) return;\n    appendLine(\"‚ûú \" + cmd);\n    playSound(300, 50);\n\n    const args = cmd.trim().split(\/\\\\s+\/);\n    const baseCmd = args[0].toLowerCase();\n\n    switch(baseCmd) {\n      case \"help\":\n        showHelp();\n        break;\n      case \"list\":\n        if (args[1] && args[1].toLowerCase() === \"apps\") listApps();\n        else appendLine(\"Unknown list command.\", \"error\");\n        break;\n      case \"open\":\n        if (args.length < 2) appendLine(\"Usage: open [app]\", \"error\");\n        else openApp(args[1].toLowerCase());\n        break;\n      case \"time\":\n        appendLine(new Date().toLocaleTimeString());\n        break;\n      case \"date\":\n        appendLine(new Date().toLocaleDateString());\n        break;\n      case \"clear\":\n        output.innerHTML = \"\";\n        break;\n      case \"notes\":\n        switchTab('notes');\n        break;\n      case \"web\":\n        switchTab('web');\n        break;\n      case \"exit\":\n        window.webkit.messageHandlers.exit.postMessage(\"exit\");\n        break;\n      default:\n        appendLine(\"Unknown command. Type 'help' for commands.\", \"error\");\n        playSound(200, 200);\n    }\n  }\n\n  function switchTab(tabName) {\n    tabs.forEach(t => {\n      if (t.dataset.tab === tabName) t.classList.add(\"active\");\n      else t.classList.remove(\"active\");\n    });\n    tabContents.forEach(c => {\n      if (c.id === (tabName === 'apps' ? 'appLauncher' : tabName + \"UI\")) c.style.display = \"block\";\n      else c.style.display = \"none\";\n    });\n    playSound(500, 70);\n  }\n\n  const appEmojis = {\n    safari: \"üåê\",\n    mail: \"‚úâÔ∏è\",\n    files: \"üìÅ\",\n    roblox: \"üéÆ\",\n    pages: \"üìÑ\",\n    calendar: \"üìÖ\",\n    reminders: \"‚úÖ\"\n  };\n\n  const appLauncherDiv = document.getElementById(\"appLauncher\");\n  Object.keys(apps).forEach(app => {\n    const div = document.createElement(\"div\");\n    div.className = \"appIcon\";\n    div.title = app;\n    div.innerHTML = \\`<div class=\"appEmoji\">\\${appEmojis[app] || \"‚ùì\"}<\/div><div class=\"appName\">\\${app}<\/div>\\`;\n    div.onclick = () => openApp(app);\n    appLauncherDiv.appendChild(div);\n  });\n\n  function saveNotes() {\n    localStorage.setItem(\"terminalLauncherNotes\", notesArea.value);\n    appendLine(\"Notes saved.\", \"success\");\n    playSound(700, 100);\n  }\n  function loadNotes() {\n    const notes = localStorage.getItem(\"terminalLauncherNotes\");\n    if (notes) notesArea.value = notes;\n  }\n  notesSaveBtn.onclick = saveNotes;\n\n  goBtn.onclick = () => {\n    const url = urlInput.value.trim();\n    if (!url) {\n      appendLine(\"Please enter a URL.\", \"error\");\n      playSound(200, 200);\n      return;\n    }\n    let fullUrl = url;\n    if (!fullUrl.match(\/^https?:\\\\\/\\\\\/\/i)) fullUrl = \"https:\/\/\" + fullUrl;\n\n    window.webkit.messageHandlers.openApp.postMessage(fullUrl);\n    appendLine(\\`Opening URL: \\${fullUrl}\\`, \"success\");\n    playSound(600, 150);\n  };\n\n  input.addEventListener(\"keydown\", e => {\n    if (e.key === \"Enter\") {\n      processCommand(input.value);\n      input.value = \"\";\n    }\n  });\n\n  showHelp();\n  loadNotes();\n<\/script>\n<\/body>\n<\/html>\n  `;\n\n  const appsJSON = encodeURIComponent(JSON.stringify(apps));\n  const finalHTML = html.replace(\"__APPS_JSON__\", appsJSON);\n\n  const webView = new WebView();\n  await webView.loadHTML(finalHTML);\n\n  webView.onMessage = msg => {\n    if (msg === \"exit\") {\n      Script.complete();\n    } else if (typeof msg === \"string\") {\n      Safari.open(msg);\n    }\n  };\n\n  await webView.present(true);\n  Script.complete();\n}\n\nmain();\n",
  "share_sheet_inputs" : [

  ]
}